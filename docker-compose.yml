version: "3.9"
services:
  postgres-products:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_PRODUCTS}
    ports: ["5433:5432"]
    healthcheck: { test: ["CMD-SHELL","pg_isready -U postgres"], interval: 5s, timeout: 3s, retries: 20 }

  postgres-inventory:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_INVENTORY}
    ports: ["5434:5432"]
    healthcheck: { test: ["CMD-SHELL","pg_isready -U postgres"], interval: 5s, timeout: 3s, retries: 20 }

  products-service:
    build: ./products-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      API_KEY_INTERNAL: ${API_KEY_INTERNAL}
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-products:5432/${POSTGRES_DB_PRODUCTS}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SERVER_PORT: 8081
    depends_on: [postgres-products]
    ports: ["8081:8081"]

  inventory-service:
    build: ./inventory-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      API_KEY_INTERNAL: ${API_KEY_INTERNAL}
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-inventory:5432/${POSTGRES_DB_INVENTORY}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      PRODUCTS_BASE_URL: http://products-service:8081
      SERVER_PORT: 8082
    depends_on: [postgres-inventory, products-service]
    ports: ["8082:8082"]
services:
  products-db:
    image: postgres:16
    environment:
      POSTGRES_DB: products
      POSTGRES_USER: ${PRODUCTS_DB_USER}
      POSTGRES_PASSWORD: ${PRODUCTS_DB_PASS}
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 10

  inventory-db:
    image: postgres:16
    environment:
      POSTGRES_DB: inventory
      POSTGRES_USER: ${INVENTORY_DB_USER}
      POSTGRES_PASSWORD: ${INVENTORY_DB_PASS}
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 10

  products:
    build: ./products-service
    environment:
      SPRING_DATASOURCE_URL: ${PRODUCTS_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${PRODUCTS_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${PRODUCTS_DB_PASS}
      INTERSERVICE_API_KEY: ${INTERSERVICE_API_KEY}
    depends_on:
      products-db:
        condition: service_healthy
    ports:
      - "${PRODUCTS_PORT}:8080"

  inventory:
    build: ./inventory-service
    environment:
      SPRING_DATASOURCE_URL: ${INVENTORY_DB_URL}
      SPRING_DATASOURCE_USERNAME: ${INVENTORY_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${INVENTORY_DB_PASS}
      INTERSERVICE_API_KEY: ${INTERSERVICE_API_KEY}
      PRODUCTS_BASE_URL: http://products:8080
      HTTP_CLIENT_TIMEOUT_MS: ${HTTP_CLIENT_TIMEOUT_MS}
      HTTP_CLIENT_MAX_RETRIES: ${HTTP_CLIENT_MAX_RETRIES}
    depends_on:
      inventory-db:
        condition: service_healthy
      products:
        condition: service_started
    ports:
      - "${INVENTORY_PORT}:8080"
