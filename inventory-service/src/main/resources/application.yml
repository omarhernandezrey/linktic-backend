server:
  port: ${SERVER_PORT:8082}

spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:h2:mem:inventory;DB_CLOSE_DELAY=-1}
    username: ${SPRING_DATASOURCE_USERNAME:sa}
    password: ${SPRING_DATASOURCE_PASSWORD:}
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false

management:
  endpoints:
    web:
      exposure:
        include: health,info

api:
  key: ${INTERSERVICE_API_KEY:change-me}

products:
  base-url: ${PRODUCTS_BASE_URL:http://localhost:8081}

http:
  client:
    timeout-ms: 1500
    max-retries: 2

resilience4j:
  circuitbreaker:
    instances:
      productsService:
        slidingWindowType: COUNT_BASED
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        recordExceptions:
          - java.io.IOException
          - java.net.SocketTimeoutException
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - org.springframework.web.reactive.function.client.WebClientResponseException
        ignoreExceptions:
          - com.linktic.inventory.client.ProductNotFoundException
  retry:
    instances:
      productsService:
        maxAttempts: ${HTTP_CLIENT_MAX_RETRIES:2}
        waitDuration: 200ms
        retryExceptions:
          - java.io.IOException
          - java.net.SocketTimeoutException
          - org.springframework.web.reactive.function.client.WebClientRequestException
        ignoreExceptions:
          - com.linktic.inventory.client.ProductNotFoundException
